buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE")
    }
}

plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.hidetake.ssh' version '2.10.1'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

//Spring Boot Overriding
ext['hibernate.version'] = '5.2.11.Final' //추가

group 'com.betterNow.studyCafe'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
bootRun {
    String activeProfile = System.properties['spring.profiles.active']
    systemProperty "spring.profiles.active", activeProfile
}

repositories {
    mavenCentral()
}

dependencies {

    // Spring Boot starter
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.jetbrains:annotations:20.1.0'

    // Mysql
    compile('mysql:mysql-connector-java')
    runtimeOnly 'mysql:mysql-connector-java'

    // QueryDSL
    implementation 'com.querydsl:querydsl-core'
    implementation 'com.querydsl:querydsl-jpa'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    // java.lang.NoClassDefFoundError (javax.annotation.Generated) 발생 대응

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // swagger
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    // security
    compile('org.springframework.boot:spring-boot-starter-oauth2-client')

    // modelmapper
    implementation 'org.modelmapper:modelmapper:2.3.0'

    // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5', version: '3.0.4.RELEASE'

    // validation
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.2'

    // test
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'junit'
    }
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
    testCompile('org.junit.jupiter:junit-jupiter-params:5.2.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')


    // summernote 이미지 업로드 할 때 JSON 리턴을 위한 gson 사용 의존성 추가
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
}

// querydsl 적용
def generated='src/main/generated'
sourceSets {
    main.java.srcDirs += [ generated ]
}
tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}
clean.doLast {
    file(generated).deleteDir()
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

test {
    useJUnitPlatform()
}